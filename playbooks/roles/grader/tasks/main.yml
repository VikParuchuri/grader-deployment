---
- name: create user group
  group: name=grader state=present

- name: add ubuntu to grader
  user: name=ubuntu append=yes groups="adm,grader"

- name: Create www-data user
  user: name={{grader_user}} append=yes groups="adm,grader" shell=/bin/bash

- name: upload sudoers.d file
  copy: src=sudoers-admin dest=/tmp/admin-sudo owner=root group=root mode=0440

- name: move file to sudoers.d
  shell: visudo -q -c -f /tmp/admin-sudo && cp /tmp/admin-sudo /etc/sudoers.d/admin-sudo

- name: add apt repo
  apt_repository: repo=ppa:nginx/stable

- name: install apt requirements
  apt: pkg={{item}} state=present update_cache=yes install_recommends=yes
  with_items:
    - python-mysqldb
    - sqlite3
    - nginx
  notify: restart nginx

- name: render grader service from template
  template: src=grader.conf.j2 dest=/etc/init/grader.conf owner=root group=grader mode=0664
  notify: restart grader

#Grader user is admin
- name: Create grader user
  user: name={{ grader_user }} append=yes groups="adm,grader" shell=/bin/bash

#Upload custom git ssh script
- name: upload ssh script
  copy: src=git_ssh.sh dest=/tmp/git_ssh.sh force=yes owner=root group=adm mode=750

- name: set permissions on app_base_dir sgid for grader
  file: path={{app_base_dir}} owner=root group=grader mode=2775 state=directory
  file: path={{venv_dir}} owner=root group=grader mode=2775 state=directory

- name: Install git so that we can clone repos
  apt: pkg=git install_recommends=yes state=present

#Create directories for repos
- name: create grader directory and set permissions
  file: path={{item}} owner={{grader_user}} group=grader mode=2775 state=directory
  with_items:
   - ${discern_dir}

#Grab both repos or update
- name: git checkout grader repo into grader_dir
  git: dest={{discern_dir}} repo={{grader_source_repo}} version={{discern_branch}}
  environment:
    GIT_SSH: /tmp/git_ssh.sh
  notify:
    - restart grader

- name : install python requirements for grader and ease
  pip: requirements="{{item}}/requirements.txt" virtualenv="{{venv_dir}}" state=present
  with_items:
    - ${grader_dir}

#Run this instead of using the ansible module because the ansible module only support syncdb of these three, and does not
#support virtualenvs as of this comment
- name: django syncdb, migrate, and collectstatic for grader
  shell: ${venv_dir}/bin/python {{grader_dir}}/manage.py {{item}} --noinput --settings={{grader_settings}} --pythonpath={{grader_dir}}
  with_items:
    - syncdb
    - migrate
    - collectstatic

- name: create nginx directory and set perms
  file: path=/etc/nginx/sites-available owner=root group=grader mode=2775 state=directory

#Install nginx sites available
#remove default link, render template, link template to sites-enabled to activate
- name: Removing default nginx config
  file: path=/etc/nginx/sites-enabled/default state=absent
  notify: restart nginx

- name: render nginx sites available
  template: src=nginx-grader.j2 dest=/etc/nginx/sites-available/{{ site_name }}
  notify: restart nginx

- name: Creating nginx config link {{ site_name }}
  file: src=/etc/nginx/sites-available/{{ site_name }} dest=/etc/nginx/sites-enabled/{{ site_name }} state=link owner=root group=root
  notify: restart nginx
